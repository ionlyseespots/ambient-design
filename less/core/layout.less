// Layout for sections and outlines is linear.
// You can specify a vertical layout direction by adding the attribute and value am-layout="vertical" to the HTML5 article element.
[am-layout~="vertical"] {
  & > section {
    .flex-basis(auto); //  https://social.msdn.microsoft.com/Forums/ie/en-US/8145c1e8-6e51-4213-ace2-2cfa43b1c018/ie-11-flexbox-with-flexwrap-wrap-doesnt-seem-to-calculate-widths-correctly-boxsizing-ignored?forum=iewebdevelopment
    width: 100%;
  }
}

// grids
[am-layout~="grid"] {

  & div[am-layout="row"] {
    .flex-basis(auto); // https://social.msdn.microsoft.com/Forums/ie/en-US/8145c1e8-6e51-4213-ace2-2cfa43b1c018/ie-11-flexbox-with-flexwrap-wrap-doesnt-seem-to-calculate-widths-correctly-boxsizing-ignored?forum=iewebdevelopment
    .flex-display;
    .flex-flow(row wrap);
    width: 100%;
    & div[am-layout="column"] {
      .flex(1 8.3333%);

    }
    & div[am-layout="column-fourth"] {
      .flex-basis(auto);
      width: 25%;
    }
    & div[am-layout="column-third"] {
      .flex-basis(auto);
      width: 33.333%;
    }
    & div[am-layout="column-half"] {
      .flex-basis(auto);
      width: 50%;
    }
    & div[am-layout="column-two-thirds"] {
      .flex-basis(auto);
      width: 66.6667%;
    }
    & div[am-layout="column-three-fourths"] {
      .flex-basis(auto);
      width: 75%;
    }
    // portrait sizing is a possibility, making use of full width for now but will potentially have variables for both portrait & landscape
    & div[am-layout="portrait-full"] {
      @media (orientation:portrait){
        .flex-basis(auto);
        width: 100%;
      }
    }
  }
  & div[am-layout_gutter="margin"] {
    & div[am-layout="row"] {
      & div[am-layout^="column"] {
        margin-left:1em;
        &:first-of-type {
          margin-left: -1em;
          padding-left: 1em;
        }
      }
    }
  }
  & div[am-layout_gutter="padding"] {
    & div[am-layout="row"] {
      & div[am-layout^="column"] {
        padding-left:1em;
        &:first-of-type {
          padding-left: 0;
        }
      }
    }
  }
}

// cards
[am-component~="card"]   {
  -webkit-column-width:  15em;
  -webkit-column-gap: 1em;
  -webkit-column-count: auto;
  -moz-column-width:  15em;
  -moz-column-gap: 1em;
  -moz-column-count: auto;
  -ms-column-width:  15em;
  -ms-column-gap: 1em;
  -ms-column-count: auto;
  column-width:  15em;
  column-gap: 1em;
  column-count: auto;
  padding-left: .5em;
  padding-right: .5em;
  & [am-card="block"] {
    box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.26);
    padding: 1em;
    border-radius: 2px;
    margin: .5em 0;
    display: inline-block;
  }
  &[am-card~="horizontal"] {
    -webkit-column-count: 1;
    -moz-column-count: 1;
    -ms-column-count: 1;
    column-count: 1;
    padding: 0;
    & [am-card="row"] {
      .flex-basis(auto);
      .flex-display;
      .flex-flow(row wrap);
      width: 100%;
      padding: 0 .5em;
      & [am-card="block"] {
        .flex(1 auto);
        width: 8.3333%;
        margin-left: 1em;
        &:first-of-type {
          margin-left: 0;
        }
      }
    }
  }
  &[am-card~="vertical"] {
    -webkit-column-count: 1;
    -moz-column-count: 1;
    -ms-column-count: 1;
    column-count: 1;
    padding: 0;
    & [am-card="row"] {
      padding: 0 .5em;
      & [am-card="block"] {
        .flex(1 auto);
        width: 100%;
      }
    }
  }
  @media (orientation:portrait){
    -webkit-column-count: 2;
    -moz-column-count: 2;
    -ms-column-count: 2;
    column-count: 2;
  }
}




// grids
[am-component~="grid"] {
  & [am-grid="row"] {
    .flex-basis(auto); // https://social.msdn.microsoft.com/Forums/ie/en-US/8145c1e8-6e51-4213-ace2-2cfa43b1c018/ie-11-flexbox-with-flexwrap-wrap-doesnt-seem-to-calculate-widths-correctly-boxsizing-ignored?forum=iewebdevelopment
    .flex-display;
    .flex-flow(row wrap);
    width: 100%;
    & [am-grid="block"] {
      .flex(1 8.3333%);
      &[am-block="fourth"] {
        .flex-basis(auto);
        width: 25%;
      }
      &[am-block="third"] {
        .flex-basis(auto);
        width: 33.333%;
      }
      &[am-block="half"] {
        .flex-basis(auto);
        width: 50%;
      }
      &[am-block="two-thirds"] {
        .flex-basis(auto);
        width: 66.6667%;
      }
      &[am-block="three-fourths"] {
        .flex-basis(auto);
        width: 75%;
      }
      &[am-block="full"] {
        .flex-basis(auto);
        width: 100%;
      }
      // portrait sizing is a possibility, making use of full width for now but will potentially have variables for both portrait & landscape
      &[am-block="portrait-full"] {
        @media (orientation:portrait){
          .flex-basis(auto);
          width: 100%;
        }
      }
    }
  }
}

// cards
[am-component~="card"]   {
  -webkit-column-width:  15em;
  -webkit-column-gap: 1em;
  -webkit-column-count: auto;
  -moz-column-width:  15em;
  -moz-column-gap: 1em;
  -moz-column-count: auto;
  -ms-column-width:  15em;
  -ms-column-gap: 1em;
  -ms-column-count: auto;
  column-width:  15em;
  column-gap: 1em;
  column-count: auto;
  padding-left: .5em;
  padding-right: .5em;
  & [am-card="block"] {
    box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.26);
    padding: 1em;
    border-radius: 2px;
    margin: .5em 0;
    display: inline-block;
  }
  &[am-card~="horizontal"] {
    -webkit-column-count: 1;
    -moz-column-count: 1;
    -ms-column-count: 1;
    column-count: 1;
    padding: 0;
    & [am-card="row"] {
      .flex-basis(auto);
      .flex-display;
      .flex-flow(row wrap);
      width: 100%;
      padding: 0 .5em;
      & [am-card="block"] {
        .flex(1 auto);
        width: 8.3333%;
        margin-left: 1em;
        &:first-of-type {
          margin-left: 0;
        }
      }
    }
  }
  &[am-card~="vertical"] {
    -webkit-column-count: 1;
    -moz-column-count: 1;
    -ms-column-count: 1;
    column-count: 1;
    padding: 0;
    & [am-card="row"] {
      padding: 0 .5em;
      & [am-card="block"] {
        .flex(1 auto);
        width: 100%;
      }
    }
  }
  @media (orientation:portrait){
    -webkit-column-count: 2;
    -moz-column-count: 2;
    -ms-column-count: 2;
    column-count: 2;
  }
}



// Forms
// <fieldset> is a  replaced element and does not currently allow you to change its display with CSS, flexbox design pattern will break if you make use of <fieldset> element
// <input> is a replaced element and does not allow ::pseudo CSS so pre/post icons are prescribed with label + input design pattern
form[am-layout] input, form[am-layout] select, form[am-layout] textarea {
  height:34px;
  padding:6px 12px;
  font-size:14px;
  line-height:1.42857143;
  color:#555;
  background-color:#fff;
  background-image:none;
  border:1px solid #ccc;
  border-radius:4px;
  -webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);
  box-shadow:inset 0 1px 1px rgba(0,0,0,.075);
  -webkit-transition:border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
  -o-transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s;
  transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s;
  &:focus {
    border-color: @am-input-focus-border;
    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 8px rgba(102, 175, 233, 0.6);
    outline: 0 none;
  }
}

form[am-layout] input[type="checkbox"] {
  display: inline-block;
  vertical-align: middle; }

form[am-layout] label {
  display: inline-block;
  & input {
    width: auto; }
}

// stacked
form[am-layout~="stacked"] {
  & input, & select, & textarea, & label {
    width: 100%; }
}

// aligned
form[am-layout~="aligned"] > span {
  .flex-display;
  .flex-flow(row wrap);
  .justify-content(justify);
  width: 100%;
  & label,  & input, & select, & textarea {
    .flex(1 8.3333%);
  }
}

// Multi-column
form[am-layout~="multicolumn"]  {
  .flex-display;
  .flex-flow(row wrap);
  & input, select, textarea, label {
    width: 100%; }
  & > div  {
    .flex(1 8.3333%);
  }
}


// Iconography
form[am-preicon], form[am-posticon] {
  position: relative;
}

form[am-preicon] + input {
  padding-left: 2em;
}

form[am-posticon] + input {
  padding-right: 2em;
}

form[am-preicon]:before {
  font-family: FontAwesome;
  position: absolute;
  left: .5em;
  top: 34px;
  content: attr(am-preicon);
}

form[am-posticon]:after {
  font-family: FontAwesome;
  position: absolute;
  right: .5em;
  top: 34px;
  content: attr(am-posticon);
}

// Nav
nav[am-layout~="equal"] {
  & a {
    padding: 1em;
    text-align: center;
    display: inline-block;
    text-decoration: none;
    -webkit-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    -moz-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    -o-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    transition: background 0.3s ease 0s;
    &:hover,
    &:focus,
    &:active,  {
      background-color:@am-primary-bg;
      outline: 0 none;
    }
  }
  .justify-content(flex-start);
}

nav[am-layout~="left-align"] {
  & a {

    padding: 1em;
    text-align: center;
    display: inline-block;
    text-decoration: none;
    -webkit-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    -moz-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    -o-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    transition: background 0.3s ease 0s;
    &:hover,
    &:focus,
    &:active,  {
      background-color:@am-primary-bg;
      outline: 0 none;
    }

    flex: none;
  }
  .justify-content(flex-start);
}

nav[am-layout~="right-align"] {
  & a {

    padding: 1em;
    text-align: center;
    display: inline-block;
    text-decoration: none;
    -webkit-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    -moz-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    -o-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    transition: background 0.3s ease 0s;
    &:hover,
    &:focus,
    &:active,  {
      background-color:@am-primary-bg;
      outline: 0 none;
    }

    flex: none;
  }
  .justify-content(flex-end);
}

nav[am-layout~="center"] {
  & a {

    padding: 1em;
    text-align: center;
    display: inline-block;
    text-decoration: none;
    -webkit-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    -moz-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    -o-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    transition: background 0.3s ease 0s;
    &:hover,
    &:focus,
    &:active,  {
      background-color:@am-primary-bg;
      outline: 0 none;
    }

    flex: none;
  }
  .justify-content(center);
}

nav[am-layout~="justify"] {
  & a {

    padding: 1em;
    text-align: center;
    display: inline-block;
    text-decoration: none;
    -webkit-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    -moz-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    -o-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    transition: background 0.3s ease 0s;
    &:hover,
    &:focus,
    &:active,  {
      background-color:@am-primary-bg;
      outline: 0 none;
    }

    flex: none;
  }
  .justify-content(space-between);
}

nav[am-layout~="vertical"] {
  .flex-direction(column);
  a {

    padding: 1em;
    text-align: center;
    display: inline-block;
    text-decoration: none;
    -webkit-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    -moz-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    -o-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    transition: background 0.3s ease 0s;
    &:hover,
    &:focus,
    &:active,  {
      background-color:@am-primary-bg;
      outline: 0 none;
    }

    .flex-basis(auto); // https://social.msdn.microsoft.com/Forums/ie/en-US/8145c1e8-6e51-4213-ace2-2cfa43b1c018/ie-11-flexbox-with-flexwrap-wrap-doesnt-seem-to-calculate-widths-correctly-boxsizing-ignored?forum=iewebdevelopment
    width: 100%;
  }
}

// useful for testing document outline and displaying nested content
// uses same color as default primary RGB color value
[am-layout~="outline"] {
  &[am-gutter~="padding"] p {
    background-color: rgba(93, 116, 137, 0.15);
    border: 1px solid rgba(93, 116, 137, 0.2);
  }
  article, section, aside, div {
    background-color: rgba(66,139,202, 0.15);
    border: 1px solid rgba(66,139,202, 0.2);
  }
}