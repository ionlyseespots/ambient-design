// Grid
// Ambient semantic layout

// http://www.w3.org/TR/CSS2/visuren.html
// Block elements are 100% width of parent element, if width is not specified.

// http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
*, *:before, *:after {
  box-sizing: inherit;
}
html {
  box-sizing: border-box;
  // http://css-tricks.com/a-couple-of-use-cases-for-calc/
  height: calc(100%);
  body {
    min-width: 100%;
    min-height: 100%;
    .flex-display;
    .flex-direction(column);
    // column (section) clearing
    header, nav, footer, h1, h2, h3, h4, h5, h6, hr, p, div {
      width: 100%;
      word-wrap: break-word;
    }
    // center page content in first article not in main horizontally and vertically
    & > article  {
      .align-items(center);
      margin: auto;
      width: auto;
    }
    header {
      .flex-display;
      .flex-flow(row wrap);
    }
    nav {
      .flex-display;
      .flex-flow(row wrap);
      & a {
        .flex(1 8.3333%);
      }
    }
    // sticky footer issue in IE is known issue:: https://github.com/philipwalton/solved-by-flexbox/issues/28
    footer {
      .flex-display;
      .flex-flow(row wrap);
      .flex-order(2);
    }
    main {
      .flex(1 0 auto);
      article {
        .flex-display;
        .flex-flow(row wrap);
        // help content on absolute positioning
        position: relative;
        // column
        section {
          .flex(1 8.3333%);
          .flex-flow(row wrap);
          // help content on absolute positioning
          position: relative;
        }
        aside {
          .flex(0 0 20%);
        }
      }
      @media (orientation:portrait){
        article {
          .flex-direction(column);
        }
        // change vertical rule back to horizontal rule for portrait view
        [am-verticalrule] {
          width: 100%;
          background-color: transparent;
          position: static;
        }
      }
    }
  }
}