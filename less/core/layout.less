// Define your layout.
// The am-layout attribute must be used on a root HTML5 semantic element, though the attribute may have no effect on some elements. Once you've defined the root element, you can add additional am-layout properties as well as extend child attributes am-layout_SOMETHING to your scaffold to gradually build a hierarchy that defines your layout.
// Linear layout :: explicit sections are horizontal by default
// ---------------------------------------------------
article[am-layout~="vertical"] {
  & > section {
    .flex-basis(auto); //  https://social.msdn.microsoft.com/Forums/ie/en-US/8145c1e8-6e51-4213-ace2-2cfa43b1c018/ie-11-flexbox-with-flexwrap-wrap-doesnt-seem-to-calculate-widths-correctly-boxsizing-ignored?forum=iewebdevelopment
    width: 100%;
  }
}
// grid layout
// ---------------------------------------------------
//[am-layout^="grid"] {
[am-row]{
  .flex-basis(auto); // https://social.msdn.microsoft.com/Forums/ie/en-US/8145c1e8-6e51-4213-ace2-2cfa43b1c018/ie-11-flexbox-with-flexwrap-wrap-doesnt-seem-to-calculate-widths-correctly-boxsizing-ignored?forum=iewebdevelopment
  .flex-display;
  .flex-flow(row wrap);
  & div[am-col] {
    .flex(1 8.3333%);
    &[am-col~="25"] {
      .flex-basis(auto);
      width: 25%;
    }
    &[am-col~="33"] {
      .flex-basis(auto);
      width: 33.333%;
    }
    &[am-col~="66"] {
      .flex-basis(auto);
      width: 66.6667%;
    }
    &[am-col~="50"] {
      .flex-basis(auto);
      width: 50%;
    }
    &[am-col~="75"] {
      .flex-basis(auto);
      width: 75%;
    }
  }
  &[am-row^="gutter margin"] {
    & > div[am-col] {
      margin-left:1em;
      .flex-basis(0);
      &:first-of-type {
        margin-left: -1em;
        padding-left: 1em;
      }
    }
  }
  &[am-row^="gutter padding"] {
    & > div[am-col] {
      padding-left:1em;
      &:first-of-type {
        padding-left: 0;
      }
    }
  }
  &[am-row~="portrait-100"] {
    @media (orientation:portrait){
      &[am-row^="gutter margin"] {
        & > div[am-col] {
          margin-left: 0;
          padding-left: 0;
        }
      }
      & > div[am-col] {
        .flex-basis(auto);
        width: 100%;
      }
    }
  }
}
[am-layout^="gutter margin"] {
  & > div[am-row] {
    & > div[am-col] {
      margin-left:1em;
      &:first-of-type {
        margin-left: -1em;
        padding-left: 1em;
      }
    }
  }
}
[am-layout^="gutter padding"] {
  & > div[am-row] {
    & > div[am-col] {
      padding-left: 1em;
      &:first-of-type {
        padding-left: 0;
      }
    }
  }
}
[am-layout~="portrait-100"] {
  & div[am-row] {
    & div[am-col] {
      @media (orientation:portrait) {
        margin-left: 0;
        padding-left: 0;
        .flex-basis(auto);
        width: 100%;
        &:first-of-type {
          margin-left: 0;
          padding-left: 0;
        }
      }
    }
  }
}

//}
// card layout
// ---------------------------------------------------
[am-layout^="card"]   {
  -webkit-column-count: 2;
  -moz-column-count: 2;
  -ms-column-count: 2;
  column-count: 2;
  & > div {
    .z-depth-bottom(1);
    padding: 1em;
    border: 1px solid hsl(0, 0%, 90%);
    border-radius: 2px;
    margin: .5em 0;
    display: inline-block;
  }
  &[am-layout~="vertical"] {
    -webkit-column-count: 1;
    -moz-column-count: 1;
    -ms-column-count: 1;
    column-count: 1;
  }
}
// Forms
// ---------------------------------------------------
// <fieldset> is a  replaced element and does not currently allow you to change its display with CSS, flexbox design pattern will break if you make use of <fieldset> element
// <input> is a replaced element and does not allow ::pseudo CSS so pre/post icons are prescribed with label + input design pattern
//form[am-layout] input, form[am-layout] select, form[am-layout] textarea {
//  height:34px;
//  padding:6px 12px;
//  font-size:14px;
//  line-height:1.42857143;
//  color:#555;
//  background-color:#fff;
//  background-image:none;
//  border:1px solid #ccc;
//  border-radius:4px;
//  -webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);
//  box-shadow:inset 0 1px 1px rgba(0,0,0,.075);
//  -webkit-transition:box-shadow @z-depth-animation-time @z-depth-animation-function;
//  -o-transition:box-shadow @z-depth-animation-time @z-depth-animation-function;
//  transition:box-shadow @z-depth-animation-time @z-depth-animation-function;
//  &:focus {
//    border-color: @am-input-focus-border;
//    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 8px rgba(102, 175, 233, 0.6);
//    outline: 0 none;
//  }
//}
form[am-layout] input[type="checkbox"] {
  display: inline-block;
  vertical-align: middle;
}
form[am-layout] label {
  display: inline-block;
  & input {
    width: auto; }
}
//== Inline
form[am-layout~="inline"] {
  // inherits default am-layout semantic root element properties
}
//== Stacked
form[am-layout~="stacked"] {
  & input, & select, & textarea, & label {
    width: 100%; }
}
//== Aligned
form[am-layout~="aligned"] > span {
  .flex-display;
  .flex-flow(row wrap);
  .justify-content(justify);
  width: 100%;
  & label,  & input, & select, & textarea {
    .flex(1 8.3333%);
  }
}
//== Multi-column
form[am-layout~="multicolumn"]  {
  .flex-display;
  .flex-flow(row wrap);
  & input, select, textarea, label {
    width: 100%; }
  & > div  {
    .flex(1 8.3333%);
  }
}
// Nav
// ---------------------------------------------------
nav[am-layout] {
    &[am-layout~="horizontal"] {
      .justify-content(flex-start);
      a {
        // inherits default am-layout semantic root element properties
      }
    }
    &[am-layout~="vertical"] {
      .flex-direction(column);
      a {
        .flex-basis(auto); // https://social.msdn.microsoft.com/Forums/ie/en-US/8145c1e8-6e51-4213-ace2-2cfa43b1c018/ie-11-flexbox-with-flexwrap-wrap-doesnt-seem-to-calculate-widths-correctly-boxsizing-ignored?forum=iewebdevelopment
        width: 100%;
      }
    }
  &[am-layout~="justify-align"] {
    .justify-content(space-between);
    a {
      flex: none;
    }
  }
  &[am-layout~="left-align"] {
    .justify-content(flex-start);
    a {
      flex: none;
    }
  }
  &[am-layout~="right-align"] {
    .justify-content(flex-end);
    a {
      flex: none;
    }
  }
  &[am-layout~="center-align"] {
    .justify-content(center);
    a {
      flex: none;
    }
  }
  & a:not(.am-btn-floating) {
    padding: .75em;
//    text-align: center;
    display: inline-block;
    text-decoration: none;
    -webkit-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    -moz-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    -o-transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    transition: color .25s linear, background-color .25s ease-in-out, border-color .25s ease-in-out;
    transition: background 0.3s ease 0s;
    &:hover,
    &:focus,
    &:active, {
//    background-color: @am-primary-bg; Potentially going away. It can get problematic if you do not want a color on hover.
      outline: 0 none;
    }
  }
}
// Button
a,
button {
  &[am-layout~="split-bottom"] {
    bottom: -45px;
    position: absolute;
    right: 25px;
  }
  &[am-layout~="split-top"] {
    top: -25px;
    position: absolute;
    right: 25px;
  }
}
// Outline :: useful for testing document outline and displaying nested content :: uses same color as default primary RGB color value
// ---------------------------------------------------
[am-layout~="outline"] {
  article,
  section,
  aside,
  div {
    background-color: rgba(66,139,202, 0.15);
    border: 1px solid rgba(66,139,202, 0.2);
  }
}