// Red
.red(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-red, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-red, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-red, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-red, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-red, @am-clr);
  }
}

// Pink
.pink(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-pink, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-pink, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-pink, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-pink, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-pink, @am-clr);
  }
}

// Purple
.purple(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-purple, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-purple, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-purple, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-purple, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-purple, @am-clr);
  }
}

// deep-purple
.deep-purple(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-deep-purple, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-deep-purple, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-deep-purple, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-deep-purple, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-deep-purple, @am-clr);
  }
}

// indigo
.indigo(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-indigo, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-indigo, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-indigo, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-indigo, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-indigo, @am-clr);
  }
}

// blue
.blue(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-blue, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-blue, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-blue, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-blue, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-blue, @am-clr);
  }
}

// light-blue
.light-blue(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-light-blue, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-light-blue, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-light-blue, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-light-blue, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-light-blue, @am-clr);
  }
}

// cyan
.cyan(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-cyan, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-cyan, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-cyan, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-cyan, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-cyan, @am-clr);
  }
}

// teal
.teal(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-teal, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-teal, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-teal, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-teal, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-teal, @am-clr);
  }
}
// green
.green(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-green, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-green, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-green, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-green, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-green, @am-clr);
  }
}

// light-green
.light-green(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-light-green, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-light-green, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-light-green, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-light-green, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-light-green, @am-clr);
  }
}

// lime
.lime(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-lime, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-lime, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-lime, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-lime, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-lime, @am-clr);
  }
}

// yellow
.yellow(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-yellow, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-yellow, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-yellow, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-yellow, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-yellow, @am-clr);
  }
}

// amber
.amber(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-amber, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-amber, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-amber, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-amber, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-amber, @am-clr);
  }
}

// orange
.orange(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-orange, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-orange, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-orange, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-orange, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-orange, @am-clr);
  }
}

// deep-orange
.deep-orange(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-deep-orange, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-deep-orange, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-deep-orange, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-deep-orange, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-deep-orange, @am-clr);
  }
}

// brown
.brown(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-brown, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-brown, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-brown, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-brown, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-brown, @am-clr);
  }
}

// grey
.grey(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-grey, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-grey, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-grey, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-grey, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-grey, @am-clr);
  }
}

// blue-grey
.blue-grey(@am-clr, @am-clr-orientation) {
  & when (@am-clr-orientation = text) {
    color: extract(@group-blue-grey, @am-clr);
  }
  & when (@am-clr-orientation = bg) {
    background-color: extract(@group-blue-grey, @am-clr);
  }
  & when (@am-clr-orientation = border) {
    border-color:  extract(@group-blue-grey, @am-clr);
  }
  & when (@am-clr-orientation = fill) {
    fill: extract(@group-blue-grey, @am-clr);
  }
  & when (@am-clr-orientation = stroke) {
    stroke: extract(@group-blue-grey, @am-clr);
  }
}